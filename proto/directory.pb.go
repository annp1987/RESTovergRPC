// Code generated by protoc-gen-go. DO NOT EDIT.
// source: directory.proto

package directory

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DirectoryRequest struct {
	DirectoryName        string   `protobuf:"bytes,1,opt,name=directory_name,json=directoryName,proto3" json:"directory_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DirectoryRequest) Reset()         { *m = DirectoryRequest{} }
func (m *DirectoryRequest) String() string { return proto.CompactTextString(m) }
func (*DirectoryRequest) ProtoMessage()    {}
func (*DirectoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_988c26833273fd2e, []int{0}
}

func (m *DirectoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectoryRequest.Unmarshal(m, b)
}
func (m *DirectoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectoryRequest.Marshal(b, m, deterministic)
}
func (m *DirectoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectoryRequest.Merge(m, src)
}
func (m *DirectoryRequest) XXX_Size() int {
	return xxx_messageInfo_DirectoryRequest.Size(m)
}
func (m *DirectoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DirectoryRequest proto.InternalMessageInfo

func (m *DirectoryRequest) GetDirectoryName() string {
	if m != nil {
		return m.DirectoryName
	}
	return ""
}

type SuccessResponse struct {
	Success              string   `protobuf:"bytes,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuccessResponse) Reset()         { *m = SuccessResponse{} }
func (m *SuccessResponse) String() string { return proto.CompactTextString(m) }
func (*SuccessResponse) ProtoMessage()    {}
func (*SuccessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_988c26833273fd2e, []int{1}
}

func (m *SuccessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuccessResponse.Unmarshal(m, b)
}
func (m *SuccessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuccessResponse.Marshal(b, m, deterministic)
}
func (m *SuccessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuccessResponse.Merge(m, src)
}
func (m *SuccessResponse) XXX_Size() int {
	return xxx_messageInfo_SuccessResponse.Size(m)
}
func (m *SuccessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SuccessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SuccessResponse proto.InternalMessageInfo

func (m *SuccessResponse) GetSuccess() string {
	if m != nil {
		return m.Success
	}
	return ""
}

type Entry struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LastName             string   `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	PhNumber             string   `protobuf:"bytes,3,opt,name=ph_number,json=phNumber,proto3" json:"ph_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}
func (*Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_988c26833273fd2e, []int{2}
}

func (m *Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entry.Unmarshal(m, b)
}
func (m *Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entry.Marshal(b, m, deterministic)
}
func (m *Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entry.Merge(m, src)
}
func (m *Entry) XXX_Size() int {
	return xxx_messageInfo_Entry.Size(m)
}
func (m *Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Entry proto.InternalMessageInfo

func (m *Entry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Entry) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Entry) GetPhNumber() string {
	if m != nil {
		return m.PhNumber
	}
	return ""
}

type EntryRequest struct {
	DirectoryName        string   `protobuf:"bytes,1,opt,name=directory_name,json=directoryName,proto3" json:"directory_name,omitempty"`
	Entry                *Entry   `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntryRequest) Reset()         { *m = EntryRequest{} }
func (m *EntryRequest) String() string { return proto.CompactTextString(m) }
func (*EntryRequest) ProtoMessage()    {}
func (*EntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_988c26833273fd2e, []int{3}
}

func (m *EntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntryRequest.Unmarshal(m, b)
}
func (m *EntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntryRequest.Marshal(b, m, deterministic)
}
func (m *EntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntryRequest.Merge(m, src)
}
func (m *EntryRequest) XXX_Size() int {
	return xxx_messageInfo_EntryRequest.Size(m)
}
func (m *EntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntryRequest proto.InternalMessageInfo

func (m *EntryRequest) GetDirectoryName() string {
	if m != nil {
		return m.DirectoryName
	}
	return ""
}

func (m *EntryRequest) GetEntry() *Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type SearchEntryRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Limit                uint32   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchEntryRequest) Reset()         { *m = SearchEntryRequest{} }
func (m *SearchEntryRequest) String() string { return proto.CompactTextString(m) }
func (*SearchEntryRequest) ProtoMessage()    {}
func (*SearchEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_988c26833273fd2e, []int{4}
}

func (m *SearchEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchEntryRequest.Unmarshal(m, b)
}
func (m *SearchEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchEntryRequest.Marshal(b, m, deterministic)
}
func (m *SearchEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchEntryRequest.Merge(m, src)
}
func (m *SearchEntryRequest) XXX_Size() int {
	return xxx_messageInfo_SearchEntryRequest.Size(m)
}
func (m *SearchEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchEntryRequest proto.InternalMessageInfo

func (m *SearchEntryRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchEntryRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type SearchEntriesResponse struct {
	Entries              []*Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchEntriesResponse) Reset()         { *m = SearchEntriesResponse{} }
func (m *SearchEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*SearchEntriesResponse) ProtoMessage()    {}
func (*SearchEntriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_988c26833273fd2e, []int{5}
}

func (m *SearchEntriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchEntriesResponse.Unmarshal(m, b)
}
func (m *SearchEntriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchEntriesResponse.Marshal(b, m, deterministic)
}
func (m *SearchEntriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchEntriesResponse.Merge(m, src)
}
func (m *SearchEntriesResponse) XXX_Size() int {
	return xxx_messageInfo_SearchEntriesResponse.Size(m)
}
func (m *SearchEntriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchEntriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchEntriesResponse proto.InternalMessageInfo

func (m *SearchEntriesResponse) GetEntries() []*Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func init() {
	proto.RegisterType((*DirectoryRequest)(nil), "directory.DirectoryRequest")
	proto.RegisterType((*SuccessResponse)(nil), "directory.SuccessResponse")
	proto.RegisterType((*Entry)(nil), "directory.Entry")
	proto.RegisterType((*EntryRequest)(nil), "directory.EntryRequest")
	proto.RegisterType((*SearchEntryRequest)(nil), "directory.SearchEntryRequest")
	proto.RegisterType((*SearchEntriesResponse)(nil), "directory.SearchEntriesResponse")
}

func init() { proto.RegisterFile("directory.proto", fileDescriptor_988c26833273fd2e) }

var fileDescriptor_988c26833273fd2e = []byte{
	// 392 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xcb, 0xae, 0x12, 0x41,
	0x10, 0xcd, 0x70, 0xc5, 0x7b, 0xa7, 0xae, 0x17, 0x48, 0x2b, 0x61, 0x1c, 0x30, 0x21, 0x9d, 0x68,
	0x0c, 0x26, 0x10, 0x71, 0x25, 0x2b, 0x0d, 0xba, 0x65, 0x31, 0xc4, 0x9d, 0x86, 0x34, 0x43, 0x05,
	0x26, 0x61, 0xba, 0x87, 0xee, 0x1e, 0x13, 0xb6, 0xfe, 0x82, 0xbf, 0xe4, 0x1f, 0xf8, 0x0b, 0x7e,
	0x88, 0x99, 0xee, 0x79, 0xf1, 0x58, 0xe8, 0xae, 0xeb, 0x9c, 0xaa, 0x73, 0x2a, 0xa7, 0x1a, 0xda,
	0x9b, 0x48, 0x62, 0xa8, 0x85, 0x3c, 0x8e, 0x13, 0x29, 0xb4, 0x20, 0x6e, 0x09, 0xf8, 0x83, 0xad,
	0x10, 0xdb, 0x3d, 0x4e, 0x58, 0x12, 0x4d, 0x18, 0xe7, 0x42, 0x33, 0x1d, 0x09, 0xae, 0x6c, 0x23,
	0x7d, 0x0f, 0x9d, 0x4f, 0x45, 0x6b, 0x80, 0x87, 0x14, 0x95, 0x26, 0x2f, 0xa1, 0x55, 0x8e, 0xaf,
	0x38, 0x8b, 0xd1, 0x73, 0x86, 0xce, 0x6b, 0x37, 0x78, 0x28, 0xd1, 0x05, 0x8b, 0x91, 0xbe, 0x81,
	0xf6, 0x32, 0x0d, 0x43, 0x54, 0x2a, 0x40, 0x95, 0x08, 0xae, 0x90, 0x78, 0x70, 0xab, 0x2c, 0x94,
	0x8f, 0x14, 0x25, 0xfd, 0x02, 0xcd, 0xcf, 0x5c, 0xcb, 0x23, 0x21, 0xf0, 0xa8, 0x26, 0x69, 0xde,
	0xa4, 0x0f, 0xee, 0x9e, 0x29, 0x6d, 0xbd, 0x1a, 0x86, 0xb8, 0xcb, 0x80, 0x45, 0x4e, 0x26, 0xbb,
	0x15, 0x4f, 0xe3, 0x35, 0x4a, 0xef, 0xc6, 0x92, 0xc9, 0x6e, 0x61, 0x6a, 0xfa, 0x0d, 0x9e, 0x18,
	0xd9, 0xff, 0x5b, 0x9d, 0xbc, 0x82, 0x26, 0x66, 0x63, 0xc6, 0xec, 0x7e, 0xda, 0x19, 0x57, 0xf9,
	0x59, 0x39, 0x4b, 0xd3, 0x0f, 0x40, 0x96, 0xc8, 0x64, 0xb8, 0x3b, 0x31, 0x79, 0x06, 0xcd, 0x43,
	0x8a, 0xf2, 0x98, 0x6b, 0xdb, 0x22, 0x43, 0xf7, 0x51, 0x1c, 0x69, 0xa3, 0xf9, 0x10, 0xd8, 0x82,
	0xce, 0xa1, 0x5b, 0x29, 0x44, 0x58, 0x45, 0x35, 0x82, 0x5b, 0xb4, 0x90, 0xe7, 0x0c, 0x6f, 0xae,
	0x2e, 0x51, 0x34, 0x4c, 0x7f, 0x35, 0xc0, 0x2d, 0xaf, 0x44, 0x38, 0xb4, 0xe7, 0x12, 0x99, 0xc6,
	0x0a, 0xea, 0xd7, 0x66, 0xcf, 0xcf, 0xe9, 0xfb, 0x35, 0xf2, 0xec, 0x60, 0x94, 0xfe, 0xf8, 0xfd,
	0xe7, 0x67, 0x63, 0x40, 0x7b, 0xe6, 0x7b, 0x7c, 0x7f, 0x3b, 0x09, 0x4f, 0x95, 0x67, 0xce, 0x88,
	0x7c, 0x85, 0xbb, 0x8f, 0x9b, 0x8d, 0xbd, 0x5e, 0xef, 0x62, 0xc9, 0x7f, 0x30, 0xe9, 0x1b, 0x93,
	0x2e, 0xed, 0x14, 0x26, 0x2c, 0x97, 0xcb, 0xd4, 0x23, 0xb8, 0xaf, 0x45, 0x4c, 0x5e, 0xd4, 0x75,
	0x2e, 0xa2, 0xf7, 0x87, 0x57, 0xe9, 0x5a, 0xae, 0xf4, 0xb9, 0x31, 0x7b, 0x4a, 0x5b, 0x85, 0x99,
	0x32, 0x6d, 0x33, 0x67, 0xb4, 0x7e, 0x6c, 0xbe, 0xfc, 0xbb, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xf0, 0x0e, 0xae, 0x2a, 0x2e, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DirectoryClient is the client API for Directory service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DirectoryClient interface {
	// CreateDirectory create a directory
	CreateDirectory(ctx context.Context, in *DirectoryRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	// AddEntry adds a new entry.
	AddEntry(ctx context.Context, in *EntryRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	// SearchEntry searches for entries matching the given query.
	SearchEntry(ctx context.Context, in *SearchEntryRequest, opts ...grpc.CallOption) (*SearchEntriesResponse, error)
}

type directoryClient struct {
	cc *grpc.ClientConn
}

func NewDirectoryClient(cc *grpc.ClientConn) DirectoryClient {
	return &directoryClient{cc}
}

func (c *directoryClient) CreateDirectory(ctx context.Context, in *DirectoryRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/directory.Directory/CreateDirectory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *directoryClient) AddEntry(ctx context.Context, in *EntryRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/directory.Directory/AddEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *directoryClient) SearchEntry(ctx context.Context, in *SearchEntryRequest, opts ...grpc.CallOption) (*SearchEntriesResponse, error) {
	out := new(SearchEntriesResponse)
	err := c.cc.Invoke(ctx, "/directory.Directory/SearchEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DirectoryServer is the server API for Directory service.
type DirectoryServer interface {
	// CreateDirectory create a directory
	CreateDirectory(context.Context, *DirectoryRequest) (*SuccessResponse, error)
	// AddEntry adds a new entry.
	AddEntry(context.Context, *EntryRequest) (*SuccessResponse, error)
	// SearchEntry searches for entries matching the given query.
	SearchEntry(context.Context, *SearchEntryRequest) (*SearchEntriesResponse, error)
}

// UnimplementedDirectoryServer can be embedded to have forward compatible implementations.
type UnimplementedDirectoryServer struct {
}

func (*UnimplementedDirectoryServer) CreateDirectory(ctx context.Context, req *DirectoryRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDirectory not implemented")
}
func (*UnimplementedDirectoryServer) AddEntry(ctx context.Context, req *EntryRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddEntry not implemented")
}
func (*UnimplementedDirectoryServer) SearchEntry(ctx context.Context, req *SearchEntryRequest) (*SearchEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchEntry not implemented")
}

func RegisterDirectoryServer(s *grpc.Server, srv DirectoryServer) {
	s.RegisterService(&_Directory_serviceDesc, srv)
}

func _Directory_CreateDirectory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DirectoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryServer).CreateDirectory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/directory.Directory/CreateDirectory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryServer).CreateDirectory(ctx, req.(*DirectoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Directory_AddEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryServer).AddEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/directory.Directory/AddEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryServer).AddEntry(ctx, req.(*EntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Directory_SearchEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryServer).SearchEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/directory.Directory/SearchEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryServer).SearchEntry(ctx, req.(*SearchEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Directory_serviceDesc = grpc.ServiceDesc{
	ServiceName: "directory.Directory",
	HandlerType: (*DirectoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDirectory",
			Handler:    _Directory_CreateDirectory_Handler,
		},
		{
			MethodName: "AddEntry",
			Handler:    _Directory_AddEntry_Handler,
		},
		{
			MethodName: "SearchEntry",
			Handler:    _Directory_SearchEntry_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "directory.proto",
}
